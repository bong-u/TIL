<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C/CPP on bong-u/til</title><link>https://bong-u.github.io/til/c_-cpp/</link><description>Recent content in C/CPP on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bong-u.github.io/til/c_-cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ 개념 정리</title><link>https://bong-u.github.io/til/c_-cpp/cpp_concept/</link><pubDate>Thu, 10 Oct 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/c_-cpp/cpp_concept/</guid><description>본 내용은 2023 MISRA-CPP 가이드라인을 공부하면서 개념을 정리한 것이다.
참조(Reference)와 포인터(Pointer) 포인터(Pointer) 메모리 주소를 저장하는 변수
1// 변수 선언 2int a = 10; 3int* b = &amp;amp;a; // a의 주소를 저장 4 5// 매개변수로 전달 6void add(int* a, int* b) { 7 *a + *b; 8} 9 10add(&amp;amp;a, &amp;amp;b); 참조(Reference) 변수에 별칭을 부여하는 것
이름으로 대상을 가리킨다.
제약사항
참조는 선언과 동시에 초기화해야 한다.</description></item><item><title>C언어 개념 정리</title><link>https://bong-u.github.io/til/c_-cpp/c_concept/</link><pubDate>Sun, 08 Sep 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/c_-cpp/c_concept/</guid><description>본 내용은 2023 MISRA-C 가이드라인을 공부하면서 개념을 정리한 것이다.
dead code &amp;lt;-&amp;gt; unreachable code dead code : 코드에서 실행되지만 그 결과가 다른 계산에 사용될 수 없는 섹션 unreachable code : 제어 흐름 경로가 없기 때문에 실행할 수 없는 프로그램 소스 코드의 일부 tag struct, union, enum 뒤에 붙는 이름 escape sequence 백슬래시()와 특정문자를 결합하여 표현하기 어려운 기능, 문자를 표시해준다. 종류 (대표적인 것만 몇개 뽑았다) \n : 개행 \t : 수평 탭 \o(8진수 숫자) : 8진수 \x(16진수 숫자) : 16진수 연결 다른 범위에 속하는 변수들을 서로 연결하는 것</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>23-모각코 on Bong-u's TIL</title><link>https://bong-u.github.io/til/mogako23/</link><description>Recent content in 23-모각코 on Bong-u's TIL</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bong-u.github.io/til/mogako23/index.xml" rel="self" type="application/rss+xml"/><item><title>[모각코] 05 : 결과</title><link>https://bong-u.github.io/til/mogako23/mogako05/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako05/</guid><description>프로그래머스 한 문제 풀기 프로그래머스 - 두 큐 합 같게 만들기 (L2) 🧠 Algorithm
1from collections import deque 2 3def solution(queue1, queue2): 4 sum1, sum2 = sum(queue1), sum(queue2) 5 dq1 = deque(queue1) 6 dq2 = deque(queue2) 7 cnt = 0 8 9 while cnt &amp;amp;lt;= len(queue1)*2&amp;#43;1 and sum1 != sum2: 10 if sum1 &amp;amp;gt; sum2: 11 tmp = dq1.popleft() 12 dq2.append(tmp) 13 sum1 -= tmp 14 sum2 &amp;#43;= tmp 15 elif sum1 &amp;amp;lt; sum2: 16 tmp = dq2.</description></item><item><title>[모각코] 05 : 계획</title><link>https://bong-u.github.io/til/mogako23/mogako05_plan/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako05_plan/</guid><description>오늘의 목표 프로그래머스 한 문제 풀기 JPA 정리하기</description></item><item><title>[모각코] 04 : 결과</title><link>https://bong-u.github.io/til/mogako23/mogako04/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako04/</guid><description>1. 프로그래머스 한 문제 풀기 프로그래머스 - 디펜스 게임 (L2) 🧠 Algorithm
1import heapq 2 3def solution(n, k, enemy): 4 heap = [] 5 cnt = 0 6 for i in enemy: 7 n -= i 8 heapq.heappush(heap, -i) 9 while n &amp;amp;lt; 0: 10 k -= 1 11 if not heap or k &amp;amp;lt; 0: 12 return cnt 13 tmp = -heapq.heappop(heap) 14 n &amp;#43;= tmp 15 cnt &amp;#43;= 1 16 return cnt 문제 n: 가지고 있는 병사 수 k: 사용할 수 있는 무적권 스킬 수 enemy: 라운드마다 존재하는 적 수의 배열 라운드마다 enemy[i]명 만큼 소모하여 enemy[i]마리의 적을 막을 수 있다 무적권을 적절히 사용하여 버틸 수 있는 최대 라운드 수를 구하라 TC input n: 7, k: 3, enemy: [4, 2, 4, 5, 3, 3, 1] 2.</description></item><item><title>[모각코] 04 : 계획</title><link>https://bong-u.github.io/til/mogako23/mogako04_plan/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako04_plan/</guid><description>오늘의 목표 프로그래머스 한 문제 풀기 @RestController 정리</description></item><item><title>[모각코] 03 : 결과</title><link>https://bong-u.github.io/til/mogako23/mogako03/</link><pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako03/</guid><description>1. 프로그래머스 한 문제 풀기 프로그래머스 - 숫자 변환하기 (L2) 🧠 Algorithm
1from collections import deque 2 3def solution(x, y, n): 4 q = deque() 5 visited = [False] * 1000001 6 q.append((x, 0)) 7 8 while q: 9 cx, cnt = q.popleft() 10 if cx == y: 11 return cnt 12 13 if cx &amp;#43; n &amp;amp;lt;= y and not visited[cx&amp;#43;n]: 14 q.append((cx&amp;#43;n, cnt&amp;#43;1)) 15 visited[cx&amp;#43;n] = True 16 if cx * 2 &amp;amp;lt;= y and not visited[cx*2]: 17 q.</description></item><item><title>[모각코] 03 : 계획</title><link>https://bong-u.github.io/til/mogako23/mogako03_plan/</link><pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako03_plan/</guid><description>오늘의 목표 프로그래머스 한 문제 풀기 JDBC 정리</description></item><item><title>[모각코] 02 : 결과</title><link>https://bong-u.github.io/til/mogako23/mogako02/</link><pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako02/</guid><description>1. 프로그래머스 한 문제 풀기 프로그래머스 - 당구 연습 (L2) 🧠 Algorithm
1def solution(m, n, startX, startY, balls): 2 answer = [] 3 for bx, by in balls: 4 tmp = [] 5 for x, y in [(-1*startX, startY), (startX, -1*startY), (startX, 2*n-startY), (2*m-startX, startY)]: 6 if bx==x and (y &amp;amp;lt; 0 &amp;amp;lt; by &amp;amp;lt; startY or startY &amp;amp;lt; by &amp;amp;lt; n &amp;amp;lt; y): 7 continue 8 if by==y and (x &amp;amp;lt; 0 &amp;amp;lt; bx &amp;amp;lt; startX or startX &amp;amp;lt; bx &amp;amp;lt; m &amp;amp;lt; x): 9 continue 10 tmp.</description></item><item><title>[모각코] 02 : 계획</title><link>https://bong-u.github.io/til/mogako23/mogako02_plan/</link><pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako02_plan/</guid><description>오늘의 목표 프로그래머스 한 문제 풀기 Springboot Testing 공부하기</description></item><item><title>[모각코] 01 : 결과</title><link>https://bong-u.github.io/til/mogako23/mogako01/</link><pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako01/</guid><description>1. 프로그래머스 한 문제 풀기 프로그래머스 - 두 원 사이의 정수 쌍 (L2) 🧠 Algorithm
1import math 2 3def calc1(r): 4 result = 0 5 for i in range(1, r): 6 result &amp;#43;= math.floor(math.sqrt(r**2 - i**2)) 7 return result*4 &amp;#43; r*4 &amp;#43; 1 8 9def calc2(r): 10 result = 0 11 for i in range(1, r): 12 a = math.sqrt(r**2 - i**2) 13 result &amp;#43;= math.floor(a) 14 if a % 1 == 0: 15 result -= 1 16 return result*4 &amp;#43; r*4 &amp;#43; 1 17 18def solution(r1, r2): 19 return calc1(r2)-calc2(r1)&amp;#43;4 문제 두 원의 반지름 r1, r2가 주어진다.</description></item><item><title>[모각코] 01 : 계획</title><link>https://bong-u.github.io/til/mogako23/mogako01_plan/</link><pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako01_plan/</guid><description>오늘의 목표 프로그래머스 한 문제 풀기 Java의 record 개념 정리하기</description></item><item><title>[모각코] 00 : 목표</title><link>https://bong-u.github.io/til/mogako23/mogako00/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><guid>https://bong-u.github.io/til/mogako23/mogako00/</guid><description>나의 목표 1. 성실한 포스팅으로 1일 1커밋을 향해 노력하겠다. 2. SW Academy에서 배운 Spring boot 기술을 상세하게 정리할 것이다. 2. 현재 기술 블로그의 디자인을 개선시킬 것이다. SW Academy 교육과정 - Backend 프레임워크를 위환 Java 심화 실리콘밸리에서 날아온 DataBase Spring Boot Basic 1 Spring Boot Basic 2 Spring Boot Basic 3 Spring Data Security 1 Spring Data Security 2</description></item></channel></rss>
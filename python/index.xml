<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on bong-u/til</title><link>https://bong-u.github.io/til/python/</link><description>Recent content in Python on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bong-u.github.io/til/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Django - JWT 인증</title><link>https://bong-u.github.io/til/python/django_jwt/</link><pubDate>Fri, 28 Jun 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/python/django_jwt/</guid><description>JWT(Json Web Token)는 웹 표준으로, JSON 객체를 사용하여 정보를 안전하게 전달하는 방식이다.
JWT 인증 구현하기 장고에서는 djangorestframework-simplejwt 패키지를 사용하여 JWT 인증을 구현할 수 있다.
requirements 1pip install djangorestframework-simplejwt settings.py 1INSTALLED_APPS = [ 2 ... 3 &amp;#39;rest_framework&amp;#39;, 4 &amp;#39;rest_framework_simplejwt&amp;#39;, 5] 1REST_FRAMEWORK = { 2 # 기본 인증 클래스를 설정 3 &amp;#39;DEFAULT_AUTHENTICATION_CLASSES&amp;#39;: ( 4 &amp;#39;rest_framework_simplejwt.authentication.JWTAuthentication&amp;#39;, 5 ), 6 # 기본 스키마 클래스를 설정, CoreAPI를 사용하여 자동으로 API 문서화를 생성 7 &amp;#39;DEFAULT_SCHEMA_CLASS&amp;#39;: &amp;#39;rest_framework.</description></item><item><title>Django - crud 기초</title><link>https://bong-u.github.io/til/python/django_basic/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/python/django_basic/</guid><description>개요 장고 프레임워크를 사용하여 기본적인 CRUD 기능과, REST API를 구현하는 방법을 알아보자.
프로젝트 구조 1. 2├── db.sqlite3 3├── djtest (메인 앱) 4│ ├── __init__.py 5│ ├── asgi.py 6│ ├── settings.py 7│ ├── urls.py 8│ ├── views.py 9│ └── wsgi.py 10├── manage.py 11├── paste (생성한 앱) 12│ ├── __init__.py 13│ ├── admin.py 14│ ├── apps.py 15│ ├── migrations 16│ ├── models.py 17│ ├── serializers.py 18│ ├── tests.py 19│ ├── urls.</description></item><item><title>[오픈소스] thefuck - pip uninstall 규칙 추가</title><link>https://bong-u.github.io/til/python/thefuck_pip/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/python/thefuck_pip/</guid><description>PR #1414 : Correct &amp;ldquo;pip delete|remove&amp;rdquo; -&amp;gt; &amp;ldquo;pip uninstall&amp;rdquo; 배경 pip uninstall &amp;lt;package&amp;gt;는 파이썬 패키지를 삭제하는 명령어이다. 헷갈려서 remove, delete로 오타를 친 경험이 있다. thefuck에서 지원하지 않는 것을 확인하고 기여하기로 했다. 과정 기존의 로직 : 오타가 났을 때, pip 명령에서 “maybe you meant” 하면서 추천해주는 명령어가 있다면 추천, 하지만 remove와 delete는 그 대상이 아님 잘못된 명령어가 ‘delete’ 또는 ‘remove’인 경우 suggest에 uninstall을 대입하도록 수정 1if broken_cmd == &amp;#39;delete&amp;#39; or broken_cmd == &amp;#39;remove&amp;#39;: 2 suggest = &amp;#39;uninstall&amp;#39; 테스트 코드 수정 1# 의도한대로 명령어를 잘 바꿔주는지 테스트 2@pytest.</description></item></channel></rss>
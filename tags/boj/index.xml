<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BOJ on bong-u/til</title><link>https://bong-u.github.io/til/tags/boj/</link><description>Recent content in BOJ on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 28 Jun 2023 00:00:00 +0900</lastBuildDate><atom:link href="https://bong-u.github.io/til/tags/boj/index.xml" rel="self" type="application/rss+xml"/><item><title>백준 - 11000 : 강의실 배정 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_11000/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11000/</guid><description>1import heapq 2 3N = int(input()) 4 5L = [] 6for _ in range(N): 7 L.append(tuple(map(int, input().split()))) 8 9L.sort() 10q = [] 11 12heapq.heappush(q, L[0][1]) 13for i in L[1:]: 14 if q[0] &amp;gt; i[0]: 15 heapq.heappush(q, i[1]) 16 else: 17 heapq.heappop(q) 18 heapq.heappush(q, i[1]) 19 20print (len(q)) 문제 강의 개수와 강의 당 시작시간, 종료시간이 주어진다 필요한 강의실 개수를 구하라 (연강 가능)) TC
input 3 1 3 2 4 3 5</description></item><item><title>백준 - 2638 : 치즈 (G3)</title><link>https://bong-u.github.io/til/algorithm/boj_2638/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2638/</guid><description>1from collections import deque 2 3dx = [0, 0, -1, 1] 4dy = [-1, 1, 0, 0] 5 6N, M = map(int, input().split()) 7L = [list(map(int, input().split())) for _ in range(N)] 8 9def check(): 10 q = deque() 11 q.append((0, 0)) 12 13 visited = [[0]*M for _ in range(N)] 14 visited[0][0] = 1 15 16 while q: 17 curX, curY = q.popleft() 18 19 for i in range(4): 20 nX = curX + dx[i] 21 nY = curY + dy[i] 22 23 if 0 &amp;lt;= nX &amp;lt; N and 0 &amp;lt;= nY &amp;lt; M: 24 if L[nX][nY] == 0 and visited[nX][nY] == 0: 25 q.</description></item><item><title>백준 - 11444 : 피보나치 수 6 (G2)</title><link>https://bong-u.github.io/til/algorithm/boj_11444/</link><pubDate>Tue, 09 May 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11444/</guid><description>1def multiply(m1, m2): 2 result = [0, 0, 0, 0] 3 result[0] = (m1[0]*m2[0] + m1[1]*m2[2]) % 1000000007 4 result[1] = (m1[0]*m2[1] + m1[1]*m2[3]) % 1000000007 5 result[2] = (m1[2]*m2[0] + m1[3]*m2[2]) % 1000000007 6 result[3] = (m1[2]*m2[1] + m1[3]*m2[3]) % 1000000007 7 return result 8 9def power(m, n): 10 if (n &amp;gt; 1): 11 m = power (m, n//2) 12 13 m = multiply (m, m) 14 if n % 2 == 1: 15 m = multiply(m, [1,1,1,0]) 16 return m 17 18N = int(input()) 19 20mat = power ([1,1,1,0], N) 21print (mat[1]%1000000007) 문제 n이 주어질 때 n번째 피보나치 수를 구하여라.</description></item><item><title>백준 - 1976 : 여행 가자 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_1976/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1976/</guid><description>1N = int(input()) 2M = int(input()) 3 4parent = [i for i in range(N)] 5 6def find(node): 7 if parent[node] != node: 8 parent[node] = find(parent[node]) 9 return parent[node] 10 11def union(a, b): 12 a = find(a) 13 b = find(b) 14 if a &amp;lt; b: 15 parent[b] = a 16 else: 17 parent[a] = b 18 19for i in range(N): 20 for j, item in enumerate(map(int, input().split())): 21 if item: 22 union(i, j) 23 24path = list(map(int, input().</description></item><item><title>백준 - 11003 : 최솟값 찾기 (P5)</title><link>https://bong-u.github.io/til/algorithm/boj_11003/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11003/</guid><description>1from collections import deque 2N, L = map(int, input().split()) 3A = list(map(int, input().split())) 4 5Q = deque([(A[0], 0)]) 6result = [A[0]] 7 8for i in range(1, N): 9if Q[0][1] == i-L: 10Q.popleft() 11while Q and Q[-1][0] &amp;gt;= A[i]: 12Q.pop() 13Q.append((A[i], i)) 14result.append(Q[0][0]) 15 16print(*result) 문제 N개의 수 A1, A2, &amp;hellip;, AN 과 L이 주어진다. Di = Ai-L+1 ~ Ai 중의 최솟값이라고 할 때, D에 저장된 수를 출력하는 프로그램을 작성하시오. TC input 12 3</description></item><item><title>백준 - 17144 : 미세먼지 안녕! (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_17144/</link><pubDate>Wed, 08 Mar 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_17144/</guid><description>1R, C, T = map(int, input().split()) 2L = [list(map(int, input().split())) for _ in range(R)] 3 4dx = [0, 1, 0, -1] 5dy = [-1, 0, 1, 0] 6dx2 = [0, 1, 0, -1] 7dy2 = [1, 0, -1, 0] 8 9pur_a = (0, 0) 10pur_b = (0, 0) 11 12for i in range(R): 13 if L[i][0] == -1: 14 pur_a = (i, 0) 15 pur_b = (i+1, 0) 16 break 17 18def diffuse(L): 19 L_ = [[0]*C for _ in range(R)] 20 21 for i in range(R): 22 for j in range(C): 23 if L[i][j] &amp;gt; 0: 24 cnt = 0 25 for k in range(4): 26 px = j+dx[k] 27 py = i+dy[k] 28 29 if 0 &amp;lt;= px &amp;lt; C and 0 &amp;lt;= py &amp;lt; R and L[py][px] !</description></item><item><title>백준 - 12851 : 숨바꼭질 2 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_12851/</link><pubDate>Tue, 07 Mar 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_12851/</guid><description>1from collections import deque 2 3position_a, position_b = map(int, input().split()) 4 5q = deque() 6visited = [False]*100001 7result = 0 8cnt = 1 9 10q.append((0, position_a)) 11while q: 12 time, cur = q.popleft(); 13 visited[cur] = True 14 15 if cur == position_b: 16 result = time 17 for i in q: 18 if i == (time, cur): 19 cnt += 1 20 break 21 if cur-1 &amp;gt;= 0 and not visited[cur-1]: 22 q.</description></item><item><title>백준 - 2448 : 별 찍기 - 11 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_2448/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2448/</guid><description>1import math 2 3N = int(input()) 4K = int(math.log2(N//3)) 5arr = [[&amp;#39; &amp;#39;] * (2*N-1) for _ in range(N)] 6 7 8def solve(depth, bx, by): 9 if depth == 0: 10 for i in range(3): 11 for j in range(i*2+1): 12 arr[by+i][bx+(2-i)+j] = &amp;#39;*&amp;#39; 13 arr[by+1][bx+2] = &amp;#39; &amp;#39; 14 else: 15 px = 2**(depth)*3 16 py = 2**(depth-1)*3 17 solve(depth-1, bx+px//2, by) 18 solve(depth-1, bx, by+py) 19 solve(depth-1, bx+px, by+py) 20solve(K, 0, 0) 21for i in arr: 22 print (&amp;#39;&amp;#39;.</description></item><item><title>백준 - 1043 : 거짓말 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_1043/</link><pubDate>Sun, 05 Mar 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1043/</guid><description>1N, M = map(int, input().split()) 2T = list(map(int, input().split())) 3T = set(T[1:]) 4 5member = [set() for _ in range(N)] 6party = [] 7visit = [False]*M 8 9def explore(n): 10 for i in member[n]: 11 if not visit[i]: 12 visit[i] = True 13 for j in party[i]: 14 explore(j-1) 15 16for i in range(M): 17 lst = list(map(int, input().split())) 18 lst = lst[1:] 19 for j in lst: 20 member[j-1].add(i) 21 party.</description></item><item><title>백준 - 5639 : 이진 검색 트리 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_5639/</link><pubDate>Fri, 03 Mar 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_5639/</guid><description>풀이방법 1 : 직접 구현 1import sys 2 3sys.setrecursionlimit(10**6) 4class Node: 5 def __init__(self, value): 6 self.value = value 7 self.left = None 8 self.right = None 9 10class BinaryTree: 11 def __init__(self, root): 12 self.root = root 13 14 def insert(self, value): 15 cur_node = self.root 16 while True: 17 if value &amp;lt; cur_node.value: 18 if cur_node.left != None: 19 cur_node = cur_node.left 20 else: 21 cur_node.left = Node(value) 22 break 23 else: 24 if cur_node.</description></item><item><title>백준 - 14938 : 서강그라운드 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_14938/</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_14938/</guid><description>1N, M, R = map(int, input().split()) 2 3item = list(map(int, input().split())) 4G = [[] for _ in range(N)] 5for _ in range(R): 6 a, b, c = map(int, input().split()) 7 G[a-1].append((b-1, c)) 8 G[b-1].append((a-1, c)) 9 10def dfs(node, dist): 11 global result 12 if dist &amp;gt; M: 13 return 14 if not visit[node]: 15 result += item[node] 16 visit[node] = True 17 18 for n_node, n_dist in G[node]: 19 dfs(n_node, dist+n_dist) 20 21max_result = 0 22 23for i in range(N): 24 result = 0 25 visit = [False]*N 26 dfs(i, 0) 27 max_result = max(max_result, result) 28 29print (max_result) 분류에 다익스트라, 플로이드-워셜로 되어있지만 DFS로 풀었다 풀이 방법 여기서는 재방문 했다고 해서 탐색을 하지 않으면 안된다 재방문했을때 전에 방문했을 때보다 더 짧은 통로로 들어왔다면 더 많은 아이템을 얻을 수 있기 때문이다 다만, 아이템은 방문할 때마다 얻을 수 있는 것이 아니기 때문에 주의하여야 한다 위의 내용을 질문게시판을 보다가 깨닫고 풀 수 있었다</description></item><item><title>백준 - 1167 : 트리의 지름 (G2)</title><link>https://bong-u.github.io/til/algorithm/boj_1167/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1167/</guid><description>1import sys 2sys.setrecursionlimit(10**6) 3input = sys.stdin.readline 4 5V = int(input()) 6G = [[] for _ in range(V)] 7for _ in range(V): 8 token = list(map(int, input().split()))[:-1] 9 for i in range(1, len(token), 2): 10 G[token[0]-1].append((token[i]-1, token[i+1])) 11 12def dfs(node, dist): 13 global max_node, max_dist 14 visited[node] = True 15 if dist &amp;gt; max_dist: 16 max_node = node 17 max_dist = dist 18 for n_node, n_dist in G[node]: 19 if not visited[n_node]: 20 dfs(n_node, dist+n_dist) 21 22max_node = 0 23 24max_dist = 0 25visited = [False]*V 26dfs(0, 0) 27max_dist = 0 28visited = [False]*V 29dfs(max_node, 0) 30 31print (max_dist) 최근에 푼 &amp;ldquo;1967: 트리의 지름&amp;rdquo; 덕분에 쉽게 해결할 수 있었다 기억하자 트리의 지름 = (어떤 한 정점에서 가장 먼 점 P)에서 가장 먼 점 사이의 거리</description></item><item><title>백준 - 1967 : 트리의 지름(G4)</title><link>https://bong-u.github.io/til/algorithm/boj_1967/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1967/</guid><description>1import sys 2sys.setrecursionlimit(10**6) 3M = int(input()) 4G = [[] for _ in range(M)] 5 6for _ in range(M-1): 7 a, b, c = map(int, input().split()) 8 G[a-1].append((b-1, c)) 9 G[b-1].append((a-1, c)) 10 11n1 = 0 12tmp = 0 13 14def dfs(node, length): 15 global n1, tmp 16 visit[node] = True 17 if length &amp;gt; tmp: 18 tmp = length 19 n1 = node 20 for child, v in G[node]: 21 if not visit[child]: 22 dfs(child, length+v) 23 24visit = [False]*M 25dfs(0, 0) 26tmp = 0 27visit = [False]*M 28dfs(n1, 0) 29print (tmp) 인터넷에서 접근 방법을 참고했다 해결 방법 아무 정점에서 가장 먼 어떤 정점을 N이라고 하자 정점 N에서 가장 먼 정점 사이의 거리가 트리의 지름과 같다 느낀 점 루트를 구할 필요가 없다는 것을 깨달았다</description></item><item><title>백준 - 15681 : 트리와 쿼리 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_15681/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_15681/</guid><description>1import sys 2sys.setrecursionlimit(10**6) 3input = sys.stdin.readline 4N, R, Q = map(int, input().split()) 5G = [[] for _ in range(N)] 6cnt = [1]*N 7visited = [False]*N 8 9for _ in range(N-1): 10 a, b = map(int, input().split()) 11 G[a-1].append(b-1) 12 G[b-1].append(a-1) 13 14def dfs(node): 15 visited[node] = True 16 17 for i in G[node]: 18 if not visited[i]: 19 cnt[node] += dfs(i) 20 return cnt[node] 21 22dfs(R-1) 23 24for _ in range(Q): 25 print (cnt[int(input())-1]) 혼자 풀었다!</description></item><item><title>백준 - 2502 : 떡 먹는 호랑이 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_2502/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2502/</guid><description>1D, K = map(int, input().split()) 2L = [(1, 0), (0, 1)] 3 4for i in range(2, D): 5 L.append((L[i-2][0]+L[i-1][0], L[i-2][1]+L[i-1][1])) 6 7A = 1 8B = 2 9 10while True: 11 if A*L[D-1][0] + B*L[D-1][1] == K: 12 break 13 14 if A+1 == B: 15 B += 1 16 A = 1 17 else: 18 A += 1 19 20print (A,&amp;#39;\n&amp;#39;,B, sep=&amp;#39;&amp;#39;) 해결방법 N번째날 떡 개수를 구하기 위해 첫째날 떡, 둘째날 떡을 각각 몇번 더해야하는지 리스트에 구한다 첫째, 둘째 날 떡을 하나하나 넣어보면서 브루트 포스를 수행한다</description></item><item><title>백준 - 13398 : 연속합 2 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_13398/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_13398/</guid><description>1N = int(input()) 2L = list(map(int, input().split())) 3res = 0 4dp = [[-1000]*N for _ in range(2)] 5dp[0][0] = L[0] 6for i in range(1, N): 7 dp[0][i] = max(dp[0][i-1]+L[i], L[i]) 8 dp[1][i] = max(dp[1][i-1]+L[i], dp[0][i-1]) 9 10print (max(max(dp[0]), max(dp[1]))) 이번 문제에서 사용할 dp 배열의 크기는 N X 2 이다. 배열은 최솟값인 -1000으로 초기화하여야 한다</description></item><item><title>백준 - 15486 : 퇴사 2 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_15486/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_15486/</guid><description>1import sys 2input = sys.stdin.readline 3N = int(input()) 4T = [] 5P = [] 6dp = [0]*(N+1) 7 8for _ in range(N): 9 a, b = map(int, input().split()) 10 T.append(a) 11 P.append(b) 12 13for i in range(N-1, -1, -1): 14 if i+T[i] &amp;gt; N: 15 dp[i] = dp[i+1] 16 else: 17 dp[i] = max(P[i]+dp[i+T[i]], dp[i+1]) 18 19print (dp[0]) dp라는 변수를 만들어야하는데 안 만들고 리스트 P만 가지고 memoization 하려다 실패했다 점화식은 잘 적었으나 조건문이 잘 못되어서 다른 풀이를 참고했다</description></item><item><title>백준 - 2631 : 줄세우기 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_2631/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2631/</guid><description>1N = int(input()) 2L = [] 3for i in range(N): 4 L.append(int(input())) 5 6dp = [1]*N 7 8for i in range(N): 9 for j in range(i): 10 if L[j] &amp;lt; L[i]: 11 dp[i] = max(dp[i], dp[j]+1) 12 13print (N-max(dp)) LIS를 활용한 문제이다 풀이 유도는 잘했으나 LIS가 헷갈려서 전에 풀었던 코드를 참고하였다</description></item><item><title>백준 - 1915 : 가장 큰 정사각형 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_1915/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1915/</guid><description>1N, M = map(int, input().split()) 2 3L = [list(map(int, input())) for _ in range(N)] 4 5dp = [[0]*(M+1) for _ in range(N+1)] 6 7result = 0 8 9for i in range(1, N+1): 10 for j in range(1, M+1): 11 dp[i][j] = L[i-1][j-1] 12 13 if L[i-1][j-1]: 14 dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1])+1 15 result = max(result, dp[i][j]) 16 17for i in dp: 18 print (i) 19print (result**2) 조금 시간이 걸렸지만 혼자 힘으로 풀었다 점화식은 dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1])+1이다.</description></item><item><title>백준 - 1918 : 후위 표기식 (G2)</title><link>https://bong-u.github.io/til/algorithm/boj_1918/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1918/</guid><description>1string = list(input()) 2 3priority = {&amp;#39;(&amp;#39;:0, &amp;#39;)&amp;#39;:0, &amp;#39;+&amp;#39;:1, &amp;#39;-&amp;#39;:1, &amp;#39;*&amp;#39;:2, &amp;#39;/&amp;#39;:2} 4operator = [] 5result = &amp;#39;&amp;#39; 6 7for c in string: 8 if c.isalpha(): 9 result += c 10 elif c == &amp;#39;(&amp;#39;: 11 operator.append(c) 12 elif c == &amp;#39;)&amp;#39;: 13 while operator: 14 op = operator.pop() 15 if op == &amp;#39;(&amp;#39;: 16 break 17 result += op 18 else: 19 if operator: 20 if priority[operator[-1]] &amp;lt; priority[c]: 21 operator.</description></item><item><title>백준 - 9252 : LCS 2 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_9252/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_9252/</guid><description>1S1 = list(input()) 2S2 = list(input()) 3 4N1 = len(S1)+1 5N2 = len(S2)+1 6 7dp = [[0]*(N1) for _ in range(N2)] 8 9for i in range(1, N2): 10 for j in range(1, N1): 11 if S2[i-1] == S1[j-1]: 12 dp[i][j] = dp[i-1][j-1] + 1 13 else: 14 dp[i][j] = max(dp[i-1][j], dp[i][j-1]) 15i = N2-1 16j = N1-1 17print (dp[i][j]) 18if dp[i][j] == 0: 19 exit() 20 21result = &amp;#39;&amp;#39; 22while True: 23 if i==0 or j==0: 24 break 25 26 if dp[i][j] == dp[i-1][j]: 27 i -= 1 28 elif dp[i][j] == dp[i][j-1]: 29 j -= 1 30 else: 31 result = S1[j-1] + result 32 i -= 1 33 j -= 1 34 35print (result) 점화식을 잘못 세웠었다 문자가 같은 경우에 max(dp[i-1][j], dp[i][j-1])+1이 아닌 dp[i-1][j-1]+1이다.</description></item><item><title>백준 - 10942 : 팰린드롬? (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_10942/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_10942/</guid><description>1import sys 2input = sys.stdin.readline 3 4N = int(input()) 5L = list(map(int, input().split())) 6 7dp = [[0]*N for _ in range(N)] 8 9for i in range(N): 10 dp[i][i] = 1 11 if i &amp;lt; N-1 and L[i] == L[i+1]: 12 dp[i][i+1] = 1 13 14for i in range(N, -1, -1): 15 for j in range(i+1, N): 16 if dp[i+1][j-1] and L[i] == L[j]: 17 dp[i][j] = 1 18 19for i in range(int(input())): 20 S, E = map(int, input().</description></item><item><title>백준 - 5582 : 공통 부분 문자열 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_5582/</link><pubDate>Tue, 31 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_5582/</guid><description>1S1 = list(input()) 2S2 = list(input()) 3L1 = len(S1)+1 4L2 = len(S2)+1 5 6dp = [[0]*L1 for _ in range(L2)] 7result = 0 8 9for i in range(1, L2): 10 for j in range(1, L1): 11 if S1[j-1] == S2[i-1]: 12 dp[i][j] = dp[i-1][j-1]+1 13 result = max(result, dp[i][j]) 14 15print (result) 혼자 힘으로 해결! 깔끔한 풀이가 나와 기분이 좋다</description></item><item><title>백준 - 5557 : 1학년 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_5557/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_5557/</guid><description>1N = int(input()) 2L = list(map(int, input().split())) 3dp = [[0]*21 for _ in range(N-1)] 4 5dp[0][L[0]] = 1 6 7for i in range(0, N-2): 8 for j in range(21): 9 if dp[i][j] != 0: 10 k = L[i+1] 11 if k != 0: 12 if 0 &amp;lt;= j+k &amp;lt;= 20: 13 dp[i+1][j+k] += dp[i][j] 14 if 0 &amp;lt;= j-k &amp;lt;= 20: 15 dp[i+1][j-k] += dp[i][j] 16 else: 17 dp[i+1][j] = dp[i][j]*2 18print (dp[N-2][L[-1]]) 혼자 힘으로 풀었다!</description></item><item><title>백준 - 10164 : 격자상의 경로 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_10164/</link><pubDate>Sun, 29 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_10164/</guid><description>1N, M, K = map(int, input().split()) 2K -= 1 3ox = K % M 4oy = K // M 5def solve(sx, sy, ex, ey): 6 dp = [[0]*M for _ in range(N)] 7 dp[sy][sx] = 1 8 for i in range(sy, ey+1): 9 for j in range(sx, ex+1): 10 if i-1 &amp;gt;= 0: 11 dp[i][j] += dp[i-1][j] 12 if j-1 &amp;gt;= 0: 13 dp[i][j] += dp[i][j-1] 14 return dp[ey][ex] 15 16if K !</description></item><item><title>백준 - 2011 : 암호코드 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_2011/</link><pubDate>Sat, 28 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2011/</guid><description>1L = list(input()) 2N = len(L) 3MOD = 10**6 4 5def solution(): 6 if L[0] == &amp;#39;0&amp;#39;: 7 return 0 8 9 dp = [1, 1]+[0]*(N-1) 10 11 for i in range(2, N+1): 12 if L[i-1] != &amp;#39;0&amp;#39;: 13 dp[i] = (dp[i]+dp[i-1]) % MOD 14 if 10 &amp;lt;= int(L[i-2]+L[i-1]) &amp;lt;= 26: 15 dp[i] = (dp[i]+dp[i-2]) % MOD 16 17 return dp[N] 18 19 20print (solution()) 인터넷을 참고하여 풀었다</description></item><item><title>백준 - 1495 : 기타리스트 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_1495/</link><pubDate>Fri, 27 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1495/</guid><description>1N, S, M = map(int, input().split()) 2P = list(map(int, input().split())) 3dp = [[False]*(M+1) for _ in range(N+1)] 4 5dp[0][S] = True 6 7for i in range(1, N+1): 8 for j in range(M+1): 9 if dp[i-1][j]: 10 if 0 &amp;lt;= j-P[i-1] &amp;lt;= M: 11 dp[i][j-P[i-1]] = True 12 if 0 &amp;lt;= j+P[i-1] &amp;lt;= M: 13 dp[i][j+P[i-1]] = True 14result = -1 15for i in range(M+1): 16 if dp[N][i]: 17 result = i 18print (result) 인터넷에서 접근을 참고했다</description></item><item><title>백준 - 16194 : 카드 구매하기 2 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_16194/</link><pubDate>Thu, 26 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_16194/</guid><description>1N = int(input()) 2P = list(map(int, input().split())) 3dp = [10000000]*(N) 4 5for i in range(N): 6 for j in range(i): 7 dp[i] = min(dp[i], dp[j]+P[i-j-1]) 8 dp[i] = min(dp[i], P[i]) 9 10print (dp[N-1])</description></item><item><title>백준 - 1965 : 상자넣기 (S2)</title><link>https://bong-u.github.io/til/algorithm/boj_1965/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1965/</guid><description>1N = int(input()) 2L = list(map(int, input().split())) 3dp = [0]*N 4 5for i in range(1, N): 6 for j in range(i): 7 if L[j]&amp;lt;L[i] and dp[i]&amp;lt;dp[j]+1: 8 dp[i] = dp[j]+1 9print(max(dp)+1) LIS를 구하는 문제이다</description></item><item><title>백준 - 17070 : 파이프 옮기기 1 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_17070/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_17070/</guid><description>1N = int(input()) 2 3L = [list(map(int, input().split())) for _ in range(N)] 4result = 0 5 6def dfs(x, y, direc): 7 global result 8 if x == N-1 and y == N-1: 9 result += 1 10 return 11 12 if x+1 &amp;lt; N and y+1 &amp;lt; N and L[y+1][x] == 0 and L[y][x+1] == 0 and L[y+1][x+1] == 0: 13 dfs(x+1, y+1, 2) 14 15 if (direc == 0 or direc == 2) and x+1 &amp;lt; N and L[y][x+1] == 0: 16 dfs(x+1, y, 0) 17 18 if (direc == 1 or direc == 2) and y+1 &amp;lt; N and L[y+1][x] == 0: 19 dfs(x, y+1, 1) 20 21dfs(1, 0, 0) 22print(result) 별거 아닌게.</description></item><item><title>백준 - 12852 : 1로 만들기 2 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_12852/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_12852/</guid><description>1N = int(input()) 2 3dp = [0, 0] + [10**6]*(N-1) 4bt = [0]*(N+1) 5 6for i in range(2, N+1): 7 dp[i] = min(dp[i-1]+1, dp[i]) 8 bt[i] = i-1 9 10 if i%3 == 0: 11 if dp[i//3]+1 &amp;lt; dp[i]: 12 dp[i] = dp[i//3]+1 13 bt[i] = i//3 14 if i%2 == 0: 15 if dp[i//2]+1 &amp;lt; dp[i]: 16 dp[i] = dp[i//2]+1 17 bt[i] = i//2 18 dp[i] = min(dp[i], dp[i//2]+1) 19 20print(dp[N]다 21i = N 22while i !</description></item><item><title>백준 - 2096 : 내려가기 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_2096/</link><pubDate>Sat, 14 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2096/</guid><description>1N = int(input()) 2L = [list(map(int, input().split())) for _ in range(N)] 3dp1 = [L[0][i] for i in range(3)] 4dp2 = [L[0][i] for i in range(3)] 5 6for i in range(1, N): 7tmp1 = [0]*3 8tmp2 = [0]*3 9for j in range(3): 10 11 if j == 0: 12 tmp1[0] = L[i][j] + max(dp1[0], dp1[1]) 13 tmp2[0] = L[i][j] + min(dp2[0], dp2[1]) 14 elif j == 1: 15 tmp1[1] = L[i][j] + max(dp1[0], dp1[1], dp1[2]) 16 tmp2[1] = L[i][j] + min(dp2[0], dp2[1], dp2[2]) 17 else: 18 tmp1[2] = L[i][j] + max(dp1[1], dp1[2]) 19 tmp2[2] = L[i][j] + min(dp2[1], dp2[2]) 20 dp1 = [i for i in tmp1] 21 dp2 = [i for i in tmp2] 22 23print (max(dp1), min(dp2)) Memoization과정이 다른 memoization 변수에 대해 종속적이라면 잘못된 결과를 초래한다 위 코드에서는 이를 방지하기 위해 tmp1, tmp2 변수를 사용한다 깊이 생각하지 않고 여러 번 제출해서 WA개수가 조금 많다;;</description></item><item><title>백준 - 1890 : 점프 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_1890/</link><pubDate>Fri, 13 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1890/</guid><description>1N = int(input()) 2 3L = [list(map(int, input().split())) for _ in range(N)] 4dp = [[0]*N for _ in range(N)] 5dp[0][0] = 1 6for i in range(N): 7 for j in range(N): 8 if L[i][j] == 0: 9 continue 10 if dp[i][j] != 0: 11 right = j+L[i][j] 12 bottom = i+L[i][j] 13 14 if right &amp;lt; N: 15 dp[i][right] += dp[i][j] 16 if bottom &amp;lt; N: 17 dp[bottom][j] += dp[i][j] 18print (dp[N-1][N-1]) dp에 있는 값을 더해야하는데 1을 더해서 몇 번 틀렸다 거의 혼자 힘으로 풀었다</description></item><item><title>백준 - 1309 : 동물원 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_1309/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1309/</guid><description>1N = int(input()) 2dp = [1, 3] + [0]*(N-1) 3 4for i in range(2, N+1): 5 dp[i] = (dp[i-1]*2 + dp[i-2]) % 9901 6 7print(dp[N]) 고민 끝에 답을 찾아보긴 했다 점화식 생각해내는 놈들 머리에 뭐가 든건지 모르겠다</description></item><item><title>백준 - 9655 : 돌게임 (S5)</title><link>https://bong-u.github.io/til/algorithm/boj_9655/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_9655/</guid><description>1N = int(input()) 2print (&amp;#39;CY&amp;#39; if N%2==0 else &amp;#39;SK&amp;#39;) 게임이론에서 기초 중 기초 문제이다</description></item><item><title>백준 - 1010 : 다리놓기 (S5)</title><link>https://bong-u.github.io/til/algorithm/boj_1010/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1010/</guid><description>1import math 2 3for _ in range(int(input())): 4 a, b = map(int, input().split()) 5 print(math.comb(max(a,b), min(a,b)))</description></item><item><title>백준 - 10844 : 쉬운 계단 수 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_10844/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_10844/</guid><description> 접근이 어려워 인터넷을 참고했다. 코드는 보지 않았다. 수의 길이가 i이면서 마지막 숫자가 j인 계단 수의 개수를 저장하는 것이 핵심이다. 점화식은 L[i][j] = L[i-1][j-1]+L[i-1][j+1] 이다. 1N = int(input()) 2L = [[0]*12 for _ in range(100)] 3L[0] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0] 4 5for i in range(1, N): 6 for j in range(1, 11): 7 L[i][j] = L[i-1][j-1]+L[i-1][j+1] 8 9print (sum(L[N-1])%1000000000)</description></item><item><title>백준 - 11048 : 이동하기 (S2)</title><link>https://bong-u.github.io/til/algorithm/boj_11048/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11048/</guid><description>1N, M = map(int, input().split()) 2dp = [list(map(int, input().split())) for _ in range(N)] 3 4for i in range(1, N): 5 dp[i][0] = dp[i][0]+dp[i-1][0] 6for i in range(1, M): 7 dp[0][i] = dp[0][i]+dp[0][i-1] 8 9for i in range(1, N): 10 for j in range(1, M): 11 dp[i][j] = dp[i][j]+max(dp[i-1][j], dp[i][j-1]) 12 13print (dp[N-1][M-1])</description></item><item><title>백준 - 11051 : 이항계수2 (S2)</title><link>https://bong-u.github.io/til/algorithm/boj_11051/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11051/</guid><description> 내장 함수 사용
1import math 2 3N, K = map(int, input().split()) 4 5print (math.comb(N, K)%10007 파스칼의 사각형? dp 구현
1N, K = map(int, input().split()) 2 3if K == 0: 4 print(1) 5 exit() 6 7dp = [[0]*N for _ in range(K)] 8 9for i in range(N): 10 dp[0][i] = i+1 11 12for i in range(1, K): 13 for j in range(i, N): 14 dp[i][j] = (dp[i-1][j-1] + dp[i][j-1]) % 10007 15 16print (dp[K-1][N-1])</description></item><item><title>백준 - 11052 : 카드 구매하기 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_11052/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11052/</guid><description>1N = int(input()) 2P = list(map(int, input().split())) 3 4D = [P[0]]+[0]*(N-1) 5 6for i in range(1, N): 7 for j in range(1, i+1): 8 D[i] = max(D[i-j]+P[j-1], D[i]) 9 D[i] = max(P[i], D[i]) 10 11print (D[N-1]</description></item><item><title>백준 - 11057 : 오르막 수 (S1)</title><link>https://bong-u.github.io/til/algorithm/boj_11057/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_11057/</guid><description>1N = int(input()) 2dp = [[1]+[0]*9 for _ in range(N+1)] 3 4for i in range(1, N+1): 5 for j in range(1, 10): 6 dp[i][j] = dp[i-1][j]+dp[i][j-1] 7 8print (sum(dp[N])%10007)</description></item><item><title>백준 - 14891 : 톱니바퀴 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_14891/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_14891/</guid><description>1from collections import deque 2 3wheels = [deque(map(int, list(input()))) for _ in range(4)] 4 5def rotate(wheel, direction): 6 if direction == 1: 7 wheel.appendleft(wheel.pop()) 8 else: 9 wheel.append(wheel.popleft()) 10 return wheel 11 12K = int(input()) 13vd = [1, -1] 14res = 0 15 16for _ in range(K): 17 N, D = map(int, input().split()) 18 q = deque() 19 q.append((N-1, D)) 20 visited = [False] * 4 21 tmp = [] 22 23 while q: 24 cur, curD = q.</description></item><item><title>백준 - 15683 : 감시 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_15683/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_15683/</guid><description>1import copy, sys 2 3N, M = map(int, input().split()) 4L = [list(map(int, input().split())) for _ in range(N)] 5cctv = [] 6direction = [[[(0, 1)], [(0, -1)], [(1, 0)], [(-1, 0)]], 7[[(-1, 0), (1, 0)], [(0, -1), (0, 1)]], 8[[(-1, 0), (0, -1)], [(0, -1), (1, 0)], [(1, 0), (0, 1)], [(0, 1), (-1, 0)]], 9[[(-1, 0), (0, -1), (1, 0)], [(0, -1), (1, 0), (0, 1)], [(1, 0), (0, 1), (-1, 0)], [(0, 1), (-1, 0), (0, -1)]], 10[[(-1, 0), (0, -1), (1, 0), (0, 1)]]] 11res = sys.</description></item><item><title>백준 - 1699 : 제곱수의 합 (S2)</title><link>https://bong-u.github.io/til/algorithm/boj_1699/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_1699/</guid><description>1N = int(input()) 2 3dp = [100000]*(N+1) 4tmp = 1 5 6for i in range(1, N+1): 7 if i**(1/2) % 1 == 0: 8 dp[i] = 1 9 tmp += 1 10 else: 11 for j in range(1, tmp): 12 dp[i] = min(dp[i], dp[i-(j**2)]+1) 13 14print (dp[N])</description></item><item><title>백준 - 17404 : RGB거리 2 (G4)</title><link>https://bong-u.github.io/til/algorithm/boj_17404/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_17404/</guid><description>1N = int(input()) 2L = [list(map(int, input().split())) for _ in range(N)] 3 4result = 100000 5 6for i in range(3): 7 dp = [[0, 0, 0] for _ in range(N)] 8 dp[0] = [10000]*3 9 dp[0][i] = L[0][i] 10 for j in range(1, N): 11 dp[j][0] = min(dp[j-1][1], dp[j-1][2])+L[j][0] 12 dp[j][1] = min(dp[j-1][0], dp[j-1][2])+L[j][1] 13 dp[j][2] = min(dp[j-1][0], dp[j-1][1])+L[j][2] 14 15 dp[N-1][i] = 100000 16 result = min([result]+dp[N-1]) 17 18print (result) 인터넷을 참고하여 풀었다</description></item><item><title>백준 - 2193 : 이친수 (S3)</title><link>https://bong-u.github.io/til/algorithm/boj_2193/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2193/</guid><description>1N = int(input()) 2dp = [1]*N 3for i in range(2, N): 4 dp[i] = dp[i-2]+dp[i-1] 5print (dp[N-1]) 피보나치였다</description></item><item><title>백준 - 2225 - 합분해 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_2225/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2225/</guid><description>1N, K = map(int, input().split()) 2 3dp = [[0]*(N+1) for _ in range(K+1)] 4for i in range(1, K+1): 5 dp[i][0] = 1 6 7for i in range(1, K+1): 8 for j in range(1, N+1): 9 dp[i][j] = (dp[i-1][j] + dp[i][j-1])%1000000000 10print (dp[K][N]) 내 힘으로 풀었다!</description></item><item><title>백준 - 2294 : 동전 2 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_2294/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2294/</guid><description>1N, K = map(int, input().split()) 2V = [] 3for _ in range(N): 4 V.append(int(input())) 5dp = [[0]+([10001]*K) for _ in range(N+1)] 6 7for i in range(1, N+1): 8 for j in range(1, K+1): 9 if j &amp;gt;= V[i-1]: 10 dp[i][j] = min(dp[i-1][j], dp[i][j-V[i-1]]+1) 11 else: 12 dp[i][j] = dp[i-1][j] 13 14res = dp[N][K] 15 16print (res if res != 10001 else -1) dp를 많이 풀어보자</description></item><item><title>백준 - 2565 : 전깃줄 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_2565/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2565/</guid><description>1N = int(input()) 2L = [list(map(int, input().split())) for _ in range(N)] 3L = [i[1] for i in sorted(L)] 4dp = [0]*N 5for i in range(N): 6 dp[i] = 1 7 for j in range(i): 8 if L[j] &amp;lt; L[i]: 9 dp[i] = max(dp[i], dp[j]+1) 10 11print (N-max(dp)) LIS를 이용하는 문제</description></item><item><title>백준 - 2573 : 빙산 (G5)</title><link>https://bong-u.github.io/til/algorithm/boj_2573/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2573/</guid><description>1import copy 2from collections import deque 3 4N, M = map(int, input().split()) 5L = [list(map(int, input().split())) for _ in range(N)] 6L[0][0] = 0 7L[N-1][M-1] = 0 8vx = [0, 0, -1, 1] 9vy = [-1, 1, 0, 0] 10 11def melt(L): 12 L_ = copy.deepcopy(L) 13 for i in range(M): 14 for j in range(N): 15 if L[j][i] != 0: 16 for k in range(4): 17 nx = j + vx[k] 18 ny = i + vy[k] 19 20 if not 0 &amp;lt;= nx &amp;lt; N or not 0 &amp;lt;= ny &amp;lt; M: 21 continue 22 if L[nx][ny] == 0 and L_[j][i] !</description></item><item><title>백준 - 2748 : 피보나치 수2 (B2)</title><link>https://bong-u.github.io/til/algorithm/boj_2748/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/algorithm/boj_2748/</guid><description> &amp;ldquo;알고리즘 분류-DP&amp;quot;에서 안 푼 문제이길래 한 번 풀어봤다. 1N = int(input()) 2 3L = [0, 1] + [0]*89 4 5for i in range(2, N+1): 6 L[i] = L[i-1]+L[i-2] 7 8print (L[N])</description></item></channel></rss>
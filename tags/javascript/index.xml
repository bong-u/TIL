<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on bong-u/til</title><link>https://bong-u.github.io/til/tags/javascript/</link><description>Recent content in JavaScript on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Aug 2023 00:00:00 +0900</lastBuildDate><atom:link href="https://bong-u.github.io/til/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>JS - Dicom to base64</title><link>https://bong-u.github.io/til/javascript/js_dicom_to_base64/</link><pubDate>Sun, 06 Aug 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/javascript/js_dicom_to_base64/</guid><description>배경 학부연구생 업무 중에, dicom파일을 서버에 전송하는 작업이 필요했다 보내는 형식은 2가지로 생각했다 dicom파일을 그대로 multipart/form-data 형식으로 보내는 방법 장점 : 파일을 그대로 효율적으로 전송할 수 있다 단점 : 파일 정보를 함께 보내기 어렵다 dicom파일을 base64로 인코딩하여 application/json 형식으로 보내는 방법 장점 : 파일 정보를 함께 보낼 수 있다 단점 : 인코딩으로 인해서 원본 파일보다 용량이 커진다 파일의 정보도 함께 구조화하여 보내기 위해 json형태로 보내는 방식을 택하였다 구현 dicom파일 -&amp;gt; base64 1// Encode a file to BASE64 2 const readFileAsync = (file) =&amp;gt; { 3 return new Promise((resolve, reject) =&amp;gt; { 4 // 비동기적으로 파일을 읽어오기 위해 FileReader 객체를 생성 5 const reader = new FileReader(); 6 7 // 읽기가 끝나면 수행 8 reader.</description></item><item><title>JS - Arguments object 관련 이슈</title><link>https://bong-u.github.io/til/javascript/js_arguments_object_issue/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/javascript/js_arguments_object_issue/</guid><description>상황 나의 기술 블로그와 Google Analytics를 연결하기 위해 tag를 삽입하는 작업 중 이었다. 구글에서 제공하는 태그 소스 중 일부이다. 1function gtag() { 2 dataLayer.push(arguments); 3} 나는 function 키워드를 사용한게 마음에 들지 않아. 아래와 같이 화살표 함수로 바꾸어 작업하였다. 1const gtag = (...args) =&amp;gt; { 2 dataLayer.push(args); 3}; 하지만 내 코드는 정상적으로 동작하지 않았고 구글의 코드 그대로 적용해야만 google analytics가 동작하였다. 이유는 두 방식의 차이점에 있었는데, 어떤 점이 다른건지 알아보게 되었다.</description></item></channel></rss>
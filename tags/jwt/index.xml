<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JWT on bong-u/til</title><link>https://bong-u.github.io/til/tags/jwt/</link><description>Recent content in JWT on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Jun 2024 00:00:00 +0900</lastBuildDate><atom:link href="https://bong-u.github.io/til/tags/jwt/index.xml" rel="self" type="application/rss+xml"/><item><title>Django - JWT 인증</title><link>https://bong-u.github.io/til/python/django_jwt/</link><pubDate>Fri, 28 Jun 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/python/django_jwt/</guid><description>JWT(Json Web Token)는 웹 표준으로, JSON 객체를 사용하여 정보를 안전하게 전달하는 방식이다.
JWT 인증 구현하기 장고에서는 djangorestframework-simplejwt 패키지를 사용하여 JWT 인증을 구현할 수 있다.
requirements 1pip install djangorestframework-simplejwt settings.py 1INSTALLED_APPS = [ 2 ... 3 &amp;#39;rest_framework&amp;#39;, 4 &amp;#39;rest_framework_simplejwt&amp;#39;, 5] 1REST_FRAMEWORK = { 2 # 기본 인증 클래스를 설정 3 &amp;#39;DEFAULT_AUTHENTICATION_CLASSES&amp;#39;: ( 4 &amp;#39;rest_framework_simplejwt.authentication.JWTAuthentication&amp;#39;, 5 ), 6 # 기본 스키마 클래스를 설정, CoreAPI를 사용하여 자동으로 API 문서화를 생성 7 &amp;#39;DEFAULT_SCHEMA_CLASS&amp;#39;: &amp;#39;rest_framework.</description></item></channel></rss>
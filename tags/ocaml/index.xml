<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ocaml on bong-u/til</title><link>https://bong-u.github.io/til/tags/ocaml/</link><description>Recent content in Ocaml on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Apr 2024 00:00:00 +0900</lastBuildDate><atom:link href="https://bong-u.github.io/til/tags/ocaml/index.xml" rel="self" type="application/rss+xml"/><item><title>프로그래밍언어개론</title><link>https://bong-u.github.io/til/school/plt/</link><pubDate>Sun, 14 Apr 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/school/plt/</guid><description>Ocaml Functional Programming 함수형 프로그래밍은 함수를 값처럼 다루는 프로그래밍 패러다임
특징 Immutable 변수의 값이 변하지 않는다
First-class function Higher-order function Referential transparency 동일한 인자에 대해 항상 동일한 결과를 반환한다
Lazy evaluation (지연 계산) 필요할 때만 계산을 수행
Primitive Types unit int float int_of_float : float-&amp;gt;int float_of_int : int-&amp;gt;float bool : true/false x = y : x equals y (structural equality) x &amp;lt;&amp;gt; y : x not equals y (structural equality) x == y : x equals y (physical equality) x !</description></item></channel></rss>
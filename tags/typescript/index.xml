<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Typescript on bong-u/til</title><link>https://bong-u.github.io/til/tags/typescript/</link><description>Recent content in Typescript on bong-u/til</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 03 Dec 2024 00:00:00 +0900</lastBuildDate><atom:link href="https://bong-u.github.io/til/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Express&amp;React 프로젝트에 Recaptcha v3 적용하기</title><link>https://bong-u.github.io/til/javascript/apply_recaptcha/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0900</pubDate><guid>https://bong-u.github.io/til/javascript/apply_recaptcha/</guid><description>상황 사이드 프로젝트 &amp;ldquo;알록&amp;quot;을 개발하던 중, 사용자가 악의적인 목적으로 반복적으로 요청을 보내는 것을 어떻게 막을까 고민하게 되었다. 조사를 통해 Google에서 제공되는 Recaptcha를 사용하면 손쉽게 방지할 수 있다는 것을 알게 되었다. 공격자의 입장에서 생각했을 때, 지금 프로젝트에서 가장 취약한 부분은 회원가입이라고 생각했다. 회원가입은 회원이 아닌 자가, 아이디와 비밀번호 규칙만 만족한다면 반복적으로 요청을 보낼 수 있고, 이는 DB에 바로 저장되기 때문이다. 따라서 회원가입 부분에 Recaptcha를 적용하기로 결정했다. Recaptcha란? Recaptcha는 구글에서 제공하는 무료 보안 서비스로, 사용자가 로봇이 아님을 증명하는 방법 중 하나이다.</description></item></channel></rss>